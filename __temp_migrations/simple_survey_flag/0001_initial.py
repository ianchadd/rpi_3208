# Generated by Django 2.2.4 on 2020-05-11 20:01

from django.db import migrations, models
import django.db.models.deletion
import otree.db.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('otree', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_subsession', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simple_survey_flag_group', to='otree.Session')),
            ],
            options={
                'db_table': 'simple_survey_flag_group',
            },
        ),
        migrations.CreateModel(
            name='Subsession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='simple_survey_flag_subsession', to='otree.Session')),
            ],
            options={
                'db_table': 'simple_survey_flag_subsession',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_group', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_payoff', otree.db.models.CurrencyField(default=0, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_gbat_arrived', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, null=True)),
                ('_gbat_grouped', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, null=True)),
                ('consent', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, null=True, verbose_name='')),
                ('my_ID', otree.db.models.StringField(default='initial', max_length=10000, null=True)),
                ('randomID', otree.db.models.StringField(default='initial', max_length=10000, null=True)),
                ('customID', otree.db.models.StringField(max_length=10000, null=True, verbose_name='Please create your 8-character user ID.')),
                ('otherID', otree.db.models.StringField(max_length=10000, null=True, verbose_name='Please choose one of the following IDs:')),
                ('my_flag', otree.db.models.IntegerField(null=True)),
                ('other_flag', otree.db.models.IntegerField(null=True)),
                ('show_ID', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, null=True)),
                ('part_vars', otree.db.models.LongStringField(null=True)),
                ('adj_1', otree.db.models.StringField(max_length=10000, null=True, verbose_name='')),
                ('adj_2', otree.db.models.StringField(max_length=10000, null=True, verbose_name='')),
                ('adj_3', otree.db.models.StringField(max_length=10000, null=True, verbose_name='')),
                ('adj_4', otree.db.models.StringField(blank=True, max_length=10000, null=True, verbose_name='')),
                ('adj_5', otree.db.models.StringField(blank=True, max_length=10000, null=True, verbose_name='')),
                ('adj_6', otree.db.models.StringField(blank=True, max_length=10000, null=True, verbose_name='')),
                ('adj_7', otree.db.models.StringField(blank=True, max_length=10000, null=True, verbose_name='')),
                ('adj_8', otree.db.models.StringField(blank=True, max_length=10000, null=True, verbose_name='')),
                ('adj_9', otree.db.models.StringField(blank=True, max_length=10000, null=True, verbose_name='')),
                ('adj_10', otree.db.models.StringField(blank=True, max_length=10000, null=True, verbose_name='')),
                ('inferred_gender', otree.db.models.StringField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Trans/Intersex/Other', 'Trans/Intersex/Other')], max_length=10000, null=True, verbose_name='')),
                ('inferred_age', otree.db.models.StringField(choices=[('Under 18', 'Under 18'), ('18 - 24', '18 - 24'), ('25 - 34', '25 - 34'), ('35 - 44', '35 - 44'), ('45 - 54', '45 - 54'), ('55 - 64', '55 - 64'), ('65 or Older', '65 or Older')], max_length=10000, null=True, verbose_name='')),
                ('inferred_income', otree.db.models.StringField(choices=[('less than $20,000', 'less than $20,000'), ('$20,000 - $39,999', '$20,000 - $39,999'), ('$40,000 - $59,999', '$40,000 - $59,999'), ('$60,000 - $79,999', '$60,000 - $79,999'), ('$80,000 - $99,999', '$80,000 - $99,999'), ('$100,000 or more', '$100,000 or more')], max_length=10000, null=True, verbose_name='')),
                ('inferred_orientation', otree.db.models.StringField(choices=[('Heterosexual or Straight', 'Heterosexual or Straight'), ('Non-heterosexual or Non-straight', 'Non-heterosexual or Non-straight')], max_length=10000, null=True, verbose_name='')),
                ('inferred_econ_politics', otree.db.models.StringField(choices=[('More conservative than liberal', 'More conservative than liberal'), ('Equally conservative and liberal', 'Equally conservative and liberal'), ('More liberal than conservative', 'More liberal than conservative')], max_length=10000, null=True, verbose_name='')),
                ('inferred_social_politics', otree.db.models.StringField(choices=[('More conservative than liberal', 'More conservative than liberal'), ('Equally conservative and liberal', 'Equally conservative and liberal'), ('More liberal than conservative', 'More liberal than conservative')], max_length=10000, null=True, verbose_name='')),
                ('inferred_ally', otree.db.models.IntegerField(choices=[[1, 'Yes'], [0, 'No']], null=True, verbose_name='')),
                ('attn_check_3', otree.db.models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], null=True, verbose_name='(Attention Check) Please select 3 in the list below.')),
                ('ID_explain', otree.db.models.LongStringField(default='', null=True, verbose_name='Why did you choose this ID? Please respond with at least 20 characters.')),
                ('higher_inferred_ally', otree.db.models.IntegerField(choices=[[1, 'Yes'], [0, 'No']], null=True, verbose_name='')),
                ('higher_inferred_gender', otree.db.models.StringField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Trans/Intersex/Other', 'Trans/Intersex/Other')], max_length=10000, null=True, verbose_name='')),
                ('higher_inferred_orientation', otree.db.models.StringField(choices=[('Heterosexual or Straight', 'Heterosexual or Straight'), ('Non-heterosexual or Non-straight', 'Non-heterosexual or Non-straight')], max_length=10000, null=True, verbose_name='')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='simple_survey_flag.Group')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simple_survey_flag_player', to='otree.Participant')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simple_survey_flag_player', to='otree.Session')),
                ('subsession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simple_survey_flag.Subsession')),
            ],
            options={
                'db_table': 'simple_survey_flag_player',
            },
        ),
        migrations.AddField(
            model_name='group',
            name='subsession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simple_survey_flag.Subsession'),
        ),
    ]
